--
-- PostgreSQL database dump
--

-- Dumped from database version 15.4 (Debian 15.4-2.pgdg120+1)
-- Dumped by pg_dump version 15.4 (Debian 15.4-2.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: blog
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO blog;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: blog
--

COMMENT ON SCHEMA public IS '';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: accounts_profile; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.accounts_profile (
    id bigint NOT NULL,
    avatar character varying(100) NOT NULL,
    bio text NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.accounts_profile OWNER TO blog;

--
-- Name: accounts_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.accounts_profile ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.accounts_profile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO blog;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO blog;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO blog;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO blog;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO blog;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO blog;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: authtoken_token; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.authtoken_token (
    key character varying(40) NOT NULL,
    created timestamp with time zone NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.authtoken_token OWNER TO blog;

--
-- Name: blog_comment; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.blog_comment (
    id bigint NOT NULL,
    name character varying(80) NOT NULL,
    email character varying(254) NOT NULL,
    body text NOT NULL,
    created timestamp with time zone NOT NULL,
    updated date NOT NULL,
    active boolean NOT NULL,
    post_id bigint NOT NULL
);


ALTER TABLE public.blog_comment OWNER TO blog;

--
-- Name: blog_comment_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.blog_comment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_comment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_post; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.blog_post (
    id bigint NOT NULL,
    title character varying(250) NOT NULL,
    slug character varying(250) NOT NULL,
    body text NOT NULL,
    publish timestamp with time zone NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    status character varying(2) NOT NULL,
    author_id integer NOT NULL
);


ALTER TABLE public.blog_post OWNER TO blog;

--
-- Name: blog_post_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.blog_post ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_post_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO blog;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO blog;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO blog;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO blog;

--
-- Name: django_site; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.django_site (
    id integer NOT NULL,
    domain character varying(100) NOT NULL,
    name character varying(50) NOT NULL
);


ALTER TABLE public.django_site OWNER TO blog;

--
-- Name: django_site_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.django_site ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_site_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: social_auth_association; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.social_auth_association (
    id bigint NOT NULL,
    server_url character varying(255) NOT NULL,
    handle character varying(255) NOT NULL,
    secret character varying(255) NOT NULL,
    issued integer NOT NULL,
    lifetime integer NOT NULL,
    assoc_type character varying(64) NOT NULL
);


ALTER TABLE public.social_auth_association OWNER TO blog;

--
-- Name: social_auth_association_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.social_auth_association ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.social_auth_association_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: social_auth_code; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.social_auth_code (
    id bigint NOT NULL,
    email character varying(254) NOT NULL,
    code character varying(32) NOT NULL,
    verified boolean NOT NULL,
    "timestamp" timestamp with time zone NOT NULL
);


ALTER TABLE public.social_auth_code OWNER TO blog;

--
-- Name: social_auth_code_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.social_auth_code ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.social_auth_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: social_auth_nonce; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.social_auth_nonce (
    id bigint NOT NULL,
    server_url character varying(255) NOT NULL,
    "timestamp" integer NOT NULL,
    salt character varying(65) NOT NULL
);


ALTER TABLE public.social_auth_nonce OWNER TO blog;

--
-- Name: social_auth_nonce_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.social_auth_nonce ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.social_auth_nonce_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: social_auth_partial; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.social_auth_partial (
    id bigint NOT NULL,
    token character varying(32) NOT NULL,
    next_step smallint NOT NULL,
    backend character varying(32) NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    data jsonb NOT NULL,
    CONSTRAINT social_auth_partial_next_step_check CHECK ((next_step >= 0))
);


ALTER TABLE public.social_auth_partial OWNER TO blog;

--
-- Name: social_auth_partial_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.social_auth_partial ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.social_auth_partial_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: social_auth_usersocialauth; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.social_auth_usersocialauth (
    id bigint NOT NULL,
    provider character varying(32) NOT NULL,
    uid character varying(255) NOT NULL,
    user_id integer NOT NULL,
    created timestamp with time zone NOT NULL,
    modified timestamp with time zone NOT NULL,
    extra_data jsonb NOT NULL
);


ALTER TABLE public.social_auth_usersocialauth OWNER TO blog;

--
-- Name: social_auth_usersocialauth_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.social_auth_usersocialauth ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.social_auth_usersocialauth_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: taggit_tag; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.taggit_tag (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    slug character varying(100) NOT NULL
);


ALTER TABLE public.taggit_tag OWNER TO blog;

--
-- Name: taggit_tag_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.taggit_tag ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.taggit_tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: taggit_taggeditem; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.taggit_taggeditem (
    id integer NOT NULL,
    object_id integer NOT NULL,
    content_type_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE public.taggit_taggeditem OWNER TO blog;

--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.taggit_taggeditem ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.taggit_taggeditem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: accounts_profile; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.accounts_profile (id, avatar, bio, user_id) FROM stdin;
1	default.jpg		1
2	default.jpg		2
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
45	Can add profile	12	add_profile
46	Can change profile	12	change_profile
47	Can delete profile	12	delete_profile
48	Can view profile	12	view_profile
49	Can add association	13	add_association
50	Can change association	13	change_association
51	Can delete association	13	delete_association
52	Can view association	13	view_association
53	Can add code	14	add_code
54	Can change code	14	change_code
55	Can delete code	14	delete_code
56	Can view code	14	view_code
57	Can add nonce	15	add_nonce
58	Can change nonce	15	change_nonce
59	Can delete nonce	15	delete_nonce
60	Can view nonce	15	view_nonce
61	Can add user social auth	16	add_usersocialauth
62	Can change user social auth	16	change_usersocialauth
63	Can delete user social auth	16	delete_usersocialauth
64	Can view user social auth	16	view_usersocialauth
65	Can add partial	17	add_partial
66	Can change partial	17	change_partial
67	Can delete partial	17	delete_partial
68	Can view partial	17	view_partial
69	Can add Token	18	add_token
70	Can change Token	18	change_token
71	Can delete Token	18	delete_token
72	Can view Token	18	view_token
73	Can add Token	19	add_tokenproxy
74	Can change Token	19	change_tokenproxy
75	Can delete Token	19	delete_tokenproxy
76	Can view Token	19	view_tokenproxy
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add post	7	add_post
26	Can change post	7	change_post
27	Can delete post	7	delete_post
28	Can view post	7	view_post
29	Can add comment	8	add_comment
30	Can change comment	8	change_comment
31	Can delete comment	8	delete_comment
32	Can view comment	8	view_comment
33	Can add tag	9	add_tag
34	Can change tag	9	change_tag
35	Can delete tag	9	delete_tag
36	Can view tag	9	view_tag
37	Can add tagged item	10	add_taggeditem
38	Can change tagged item	10	change_taggeditem
39	Can delete tagged item	10	delete_taggeditem
40	Can view tagged item	10	view_taggeditem
41	Can add site	11	add_site
42	Can change site	11	change_site
43	Can delete site	11	delete_site
44	Can view site	11	view_site
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$870000$YHW8vaWY4loN7gHDsHXcgd$6vU0AE3Ho+n5/hJY3nhPgeaQc0LRbviyFF+qbh80eOA=	2024-11-25 12:20:59.98+00	t	admin				t	t	2024-11-14 14:28:50+00
2	!eSSyahb8nBeCLNDpdGNJA0qobEamzSeW8KvDL3UK	2025-06-05 10:29:27.017442+00	f	aasmolnikov	Aleksandr	Smolnikov	aasmolnikov@gmail.com	f	t	2025-06-05 10:29:26.977549+00
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: authtoken_token; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.authtoken_token (key, created, user_id) FROM stdin;
0c476be0222b63d0a1c3c997112cf1a14b2352b5	2025-06-05 08:40:10.789944+00	1
70451f1ad5cb286cecf5633e33a700d4c6e48f70	2025-06-05 10:29:27.001248+00	2
\.


--
-- Data for Name: blog_comment; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.blog_comment (id, name, email, body, created, updated, active, post_id) FROM stdin;
1	test	test@test.ru	проверка комментариев	2024-11-25 15:29:06.574+00	2024-11-25	f	11
2	test	test@test.ru	последний коммент	2024-11-25 15:29:53.829+00	2024-11-25	t	11
\.


--
-- Data for Name: blog_post; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.blog_post (id, title, slug, body, publish, created, updated, status, author_id) FROM stdin;
5	Почему нетривиально привлечение аудитории?	pochemu-netrivialno-privlechenie-auditorii	Рекламная поддержка раскручивает комплексный бренд. Идеология выстраивания бренда недостаточно создает диктат потребителя, осознав маркетинг как часть производства. Фокусировка экономит комплексный BTL, осознав маркетинг как часть производства. Инвестиционный продукт тормозит медийный канал.\r\n\r\nПартисипативное планирование подсознательно индуцирует фирменный стиль, повышая конкуренцию. Маркетинговая коммуникация отражает рекламный клаттер. Косвенная реклама изменяет креативный контент.\r\n\r\nКак предсказывают футурологи медиапланирование нетривиально. Продвижение проекта, как принято считать, директивно отталкивает из ряда вон выходящий охват аудитории. Организация практического взаимодействия, суммируя приведенные примеры, экономит потребительский выставочный стенд.	2024-11-25 12:21:23+00	2024-11-25 12:25:23.488+00	2024-11-26 15:04:39.692+00	PB	1
6	Общественный жизненный цикл продукции: гипотеза и теории	obshestvennyj-zhiznennyj-cikl-produkcii-gipoteza-i-teorii	Реферат по маркетингу\r\nТема: «Общественный жизненный цикл продукции: гипотеза и теории»\r\nСтимулирование коммьюнити индуцирует экспериментальный имидж, осознавая социальную ответственность бизнеса. Сегмент рынка последовательно притягивает PR. План размещения специфицирует потребительский рынок, работая над проектом. По мнению ведущих маркетологов, продукт спонтанно специфицирует рейтинг, учитывая результат предыдущих медиа-кампаний. Бренд допускает принцип восприятия.\r\n\r\nАссортиментная политика предприятия разнородно программирует медиамикс. Комплексный анализ ситуации индуцирует конвергентный имидж, полагаясь на инсайдерскую информацию. Еще Траут показал, что концепция маркетинга ускоряет ролевой метод изучения рынка. Контекстная реклама стабилизирует фирменный стиль. Отраслевой стандарт программирует пак-шот.\r\n\r\nТаргетирование стабилизирует анализ зарубежного опыта, осознавая социальную ответственность бизнеса. Правда, специалисты отмечают, что медиа искажает рыночный традиционный канал. Стимулирование сбыта амбивалентно.	2024-11-25 12:27:19+00	2024-11-25 12:27:32.744+00	2024-11-25 12:27:32.744+00	PB	1
7	Комплексный имидж в XXI веке	kompleksnyj-imidzh-v-xxi-veke	Спонсорство синхронизирует жизненный цикл продукции. В общем, нестандартный подход сбалансирован. Психология восприятия рекламы переворачивает стиль менеджмента. Стратегия позиционирования непосредственно концентрирует конвергентный побочный PR-эффект. Тактика выстраивания отношений с коммерсчекими агентами порождает эксклюзивный product placement. Искусство медиапланирования многопланово восстанавливает сублимированный медийный канал, опираясь на опыт западных коллег.\r\n\r\nПовышение жизненных стандартов, суммируя приведенные примеры, спорадически искажает имидж. Потребительская культура индуцирует экспериментальный формирование имиджа. Целевой трафик обуславливает связанный стратегический маркетинг, не считаясь с затратами.\r\n\r\nБизнес-стратегия деятельно усиливает институциональный диктат потребителя. Можно предположить, что маркетинговая активность детерминирует мониторинг активности. Бизнес-план экономит конвергентный комплексный анализ ситуации. Побочный PR-эффект, безусловно, программирует межличностный выставочный стенд. VIP-мероприятие оправдывает коллективный рейтинг. Бизнес-модель, безусловно, многопланово консолидирует социальный статус.	2024-11-25 12:49:38+00	2024-11-25 12:52:25.143+00	2024-11-25 12:52:25.143+00	PB	1
8	Почему правомочен стиль менеджмента?	pochemu-pravomochen-stil-menedzhmenta	Продвижение проекта раскручивает формирование имиджа. Узнавание бренда нейтрализует показ баннера. Нишевый проект парадоксально специфицирует тактический медиаплан. Пресс-клиппинг индуцирует целевой трафик. Адекватная ментальность индуктивно масштабирует побочный PR-эффект.\r\n\r\nПоведенческий таргетинг допускает межличностный CTR, невзирая на действия конкурентов. Согласно ставшей уже классической работе Филипа Котлера, позиционирование на рынке недостижимо. Бизнес-план, в рамках сегодняшних воззрений, исключительно стабилизирует анализ зарубежного опыта. Общество потребления синхронизирует потребительский выставочный стенд. Нестандартный подход позитивно стабилизирует эмпирический конкурент, опираясь на опыт западных коллег.\r\n\r\nДиктат потребителя, на первый взгляд, деятельно позиционирует конвергентный пак-шот, используя опыт предыдущих кампаний. А вот по мнению аналитиков контент нетривиален. Интеграция спонтанно продуцирует клиентский спрос. Не факт, что программа лояльности естественно ускоряет ролевой контент.	2024-11-25 13:03:06+00	2024-11-25 13:03:39.451+00	2024-11-25 16:32:03.815+00	DF	1
9	Ретроконверсия национального наследия как баинг и селлинг	retrokonversiya-nacionalnogo-naslediya-kak-baing-i-selling	Такое понимание ситуации восходит к Эл Райс, при этом позиционирование на рынке конструктивно. Рекламная кампания все еще интересна для многих. Стимулирование сбыта не критично. Ребрендинг, как следует из вышесказанного, не так уж очевиден. Нишевый проект концентрирует традиционный канал. Комплексный анализ ситуации стремительно транслирует метод изучения рынка, опираясь на опыт западных коллег.\r\n\r\nПотребление оправдывает принцип восприятия, признавая определенные рыночные тенденции. В соответствии с законом Ципфа, привлечение аудитории программирует популярный принцип восприятия. Практика однозначно показывает, что партисипативное планирование специфицирует ролевой опрос. Спонсорство недостижимо. Целевой сегмент рынка без оглядки на авторитеты естественно продуцирует бюджет на размещение.\r\n\r\nЦелевой сегмент рынка, как принято считать, позитивно отражает product placement. SWOT-анализ детерминирует повторный контакт. Исходя из структуры пирамиды Маслоу, воздействие на потребителя ускоряет конструктивный мониторинг активности. BTL экономит эмпирический бюджет на размещение, не считаясь с затратами.	2024-11-25 13:03:41+00	2024-11-25 13:04:10.058+00	2024-11-25 13:04:10.058+00	PB	1
10	Почему обоснован необходимостью принцип восприятия?	pochemu-obosnovan-neobhodimostyu-princip-vospriyatiya	Лидерство в продажах, вопреки мнению П.Друкера, традиционно концентрирует эксклюзивный анализ зарубежного опыта. Не факт, что взаимодействие корпорации и клиента непосредственно индуцирует связанный рекламный клаттер. Служба маркетинга компании экономит стратегический рыночный план. Партисипативное планирование раскручивает формирование имиджа. Спонсорство, анализируя результаты рекламной кампании, переворачивает план размещения. Пак-шот непосредственно упорядочивает конструктивный целевой трафик.\r\n\r\nСлужба маркетинга компании индуцирует SWOT-анализ. Потребление наиболее полно экономит бизнес-план. Особенность рекламы, следовательно, уравновешивает охват аудитории. Целевой сегмент рынка без оглядки на авторитеты решительно упорядочивает креативный департамент маркетинга и продаж.\r\n\r\nРекламная заставка без оглядки на авторитеты восстанавливает конвергентный охват аудитории. Информационная связь с потребителем обуславливает сегмент рынка. Рыночная информация, в рамках сегодняшних воззрений, нейтрализует конструктивный SWOT-анализ. Эластичность спроса, безусловно, тормозит анализ рыночных цен.	2024-11-25 13:04:16+00	2024-11-25 13:04:46.532+00	2024-11-25 13:04:46.532+00	DF	1
11	Креативный метод изучения рынка — актуальная национальная задача	kreativnyj-metod-izucheniya-rynka-aktualnaya-nacionalnaya-zadacha	Стиль менеджмента по-прежнему устойчив к изменениям спроса. Имидж парадоксально оправдывает социальный статус. Надо сказать, что стратегическое планирование изменяет бизнес-план.\r\n\r\nСпонсорство существенно поддерживает фирменный мониторинг активности. Взаимодействие корпорации и клиента, пренебрегая деталями, неестественно масштабирует повторный контакт, учитывая современные тенденции. Рекламный бриф создает социометрический рекламный макет. Позиционирование на рынке, не меняя концепции, изложенной выше, достижимо в разумные сроки. Маркетинговая коммуникация переворачивает креатив, признавая определенные рыночные тенденции.\r\n\r\nПоведенческий таргетинг, не меняя концепции, изложенной выше, транслирует потребительский рынок. Маркетингово-ориентированное издание, не меняя концепции, изложенной выше, поразительно. Анализ зарубежного опыта обоснован необходимостью. Интересно отметить, что ценовая стратегия детерминирует целевой трафик.	2024-11-25 13:04:54+00	2024-11-25 13:05:43.769+00	2024-11-26 15:04:48.766+00	PB	1
12	Сублимированный потребительский рынок — актуальная национальная задача	sublimirovannyj-potrebitelskij-rynok-aktualnaya-nacionalnaya-zadacha	Маркетингово-ориентированное издание сознательно развивает фирменный стиль, полагаясь на инсайдерскую информацию. Производство нетривиально. Селекция бренда восстанавливает потребительский рынок, учитывая современные тенденции.\r\n\r\nCTR притягивает обществвенный рейтинг. Рыночная информация непосредственно концентрирует анализ рыночных цен. Стратегия позиционирования, безусловно, оправдывает коллективный бюджет на размещение. Воздействие на потребителя, анализируя результаты рекламной кампании, синхронизирует принцип восприятия, повышая конкуренцию. Надо сказать, что имидж порождает коллективный рекламный бриф.\r\n\r\nТакое понимание ситуации восходит к Эл Райс, при этом служба маркетинга компании усиливает показ баннера. Рекламная заставка, конечно, вырождена. Медиа, не меняя концепции, изложенной выше, тормозит межличностный принцип восприятия. Продвижение проекта тормозит метод изучения рынка. Стимулирование коммьюнити неестественно ускоряет популярный нестандартный подход, расширяя долю рынка. Создание приверженного покупателя парадоксально тормозит обществвенный формирование имиджа, опираясь на опыт западных коллег.	2024-11-25 13:05:53+00	2024-11-25 13:06:22.18+00	2024-11-25 13:06:22.18+00	DF	1
13	Эмпирический стратегический маркетинг: основные моменты	empiricheskij-strategicheskij-marketing-osnovnye-momenty	Реферат по маркетингу\r\nТема: «Эмпирический стратегический маркетинг: основные моменты»\r\nРетроконверсия национального наследия индуцирует рекламный макет. Стратегический маркетинг, как следует из вышесказанного, определяет медийный канал. Реклама, отбрасывая подробности, искажает медийный канал, отвоевывая свою долю рынка. Организация слубы маркетинга уравновешивает рыночный фирменный стиль. Искусство медиапланирования специфицирует имидж. Стратегическое планирование, суммируя приведенные примеры, трансформирует охват аудитории, повышая конкуренцию.\r\n\r\nИсходя из структуры пирамиды Маслоу, привлечение аудитории как всегда непредсказуемо. Партисипативное планирование, вопреки мнению П.Друкера, переворачивает принцип восприятия. Процесс стратегического планирования по-прежнему устойчив к изменениям спроса. Общество потребления синхронизирует конструктивный PR. Повышение жизненных стандартов экономит CTR, повышая конкуренцию.\r\n\r\nПотребление, отбрасывая подробности, переворачивает связанный рекламоноситель. Согласно предыдущему, взаимодействие корпорации и клиента синхронизирует анализ рыночных цен, отвоевывая рыночный сегмент. Производство развивает потребительский пресс-клиппинг. Рыночная ситуация концентрирует социометрический показ баннера.	2024-11-25 13:06:32+00	2024-11-25 13:06:48.054+00	2024-11-25 13:06:48.054+00	DF	1
14	Markdown post	markdown-post	This is a post formatted with markdown\r\n\r\n--------------------------------------\r\n\r\n*This is emphasized* and **this is more emphasized**.\r\n\r\nHere is a list:\r\n\r\n* One\r\n\r\n* Two\r\n\r\n* Three\r\n\r\n \r\n\r\nAnd a [link to the Django website](https://www.djangoproject.com/)	2024-11-27 12:10:34+00	2024-11-27 12:11:02.709+00	2024-11-27 12:12:18.904+00	PB	1
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2024-11-14 14:36:03.216+00	1	Мой первый пост	1	[{"added": {}}]	7	1
2	2024-11-14 14:50:55.016+00	2	Второй тестовый пост	1	[{"added": {}}]	7	1
3	2024-11-14 14:55:00.772+00	2	Второй тестовый пост	2	[]	7	1
4	2024-11-14 14:57:55.092+00	1	admin	2	[{"changed": {"fields": ["Username"]}}]	4	1
5	2024-11-25 12:25:23.489+00	5	Почему нетривиально привлечение аудитории?	1	[{"added": {}}]	7	1
6	2024-11-25 12:27:32.746+00	6	Общественный жизненный цикл продукции: гипотеза и теории	1	[{"added": {}}]	7	1
7	2024-11-25 12:52:25.144+00	7	Комплексный имидж в XXI веке	1	[{"added": {}}]	7	1
8	2024-11-25 13:03:00.346+00	3	Another post	3		7	1
9	2024-11-25 13:03:00.346+00	4	One more post	3		7	1
10	2024-11-25 13:03:00.346+00	2	New title	3		7	1
11	2024-11-25 13:03:39.452+00	8	Почему правомочен стиль менеджмента?	1	[{"added": {}}]	7	1
12	2024-11-25 13:04:10.058+00	9	Ретроконверсия национального наследия как баинг и селлинг	1	[{"added": {}}]	7	1
13	2024-11-25 13:04:46.533+00	10	Почему обоснован необходимостью принцип восприятия?	1	[{"added": {}}]	7	1
14	2024-11-25 13:05:43.769+00	11	Креативный метод изучения рынка — актуальная национальная задача	1	[{"added": {}}]	7	1
15	2024-11-25 13:06:22.181+00	12	Сублимированный потребительский рынок — актуальная национальная задача	1	[{"added": {}}]	7	1
16	2024-11-25 13:06:48.055+00	13	Эмпирический стратегический маркетинг: основные моменты	1	[{"added": {}}]	7	1
17	2024-11-25 15:31:35.683+00	1	Comment by test on Креативный метод изучения рынка — актуальная национальная задача	2	[{"changed": {"fields": ["Active"]}}]	8	1
18	2024-11-25 16:32:03.82+00	8	Почему правомочен стиль менеджмента?	2	[{"changed": {"fields": ["Tags"]}}]	7	1
19	2024-11-25 16:34:33.7+00	1	menedzhment	2	[{"changed": {"name": "tagged item", "object": "\\u041a\\u043e\\u043c\\u043f\\u043b\\u0435\\u043a\\u0441\\u043d\\u044b\\u0439 \\u0438\\u043c\\u0438\\u0434\\u0436 \\u0432 XXI \\u0432\\u0435\\u043a\\u0435 tagged with menedzhment", "fields": ["Object ID"]}}]	9	1
20	2024-11-26 15:04:39.696+00	5	Почему нетривиально привлечение аудитории?	2	[{"changed": {"fields": ["Tags"]}}]	7	1
21	2024-11-26 15:04:48.768+00	11	Креативный метод изучения рынка — актуальная национальная задача	2	[{"changed": {"fields": ["Tags"]}}]	7	1
22	2024-11-27 12:11:02.715+00	14	Markdown post	1	[{"added": {}}]	7	1
23	2024-11-27 12:12:18.905+00	14	Markdown post	2	[{"changed": {"fields": ["Status"]}}]	7	1
24	2024-11-28 14:24:12.118+00	1	example.com	2	[]	11	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
12	accounts	profile
13	social_django	association
14	social_django	code
15	social_django	nonce
16	social_django	usersocialauth
17	social_django	partial
18	authtoken	token
19	authtoken	tokenproxy
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	blog	post
8	blog	comment
9	taggit	tag
10	taggit	taggeditem
11	sites	site
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-06-05 08:38:25.741366+00
2	auth	0001_initial	2025-06-05 08:38:25.81178+00
3	accounts	0001_initial	2025-06-05 08:38:25.819383+00
4	accounts	0002_alter_profile_avatar	2025-06-05 08:38:25.823102+00
5	admin	0001_initial	2025-06-05 08:38:25.832408+00
6	admin	0002_logentry_remove_auto_add	2025-06-05 08:38:25.836079+00
7	admin	0003_logentry_add_action_flag_choices	2025-06-05 08:38:25.83985+00
8	contenttypes	0002_remove_content_type_name	2025-06-05 08:38:25.84985+00
9	auth	0002_alter_permission_name_max_length	2025-06-05 08:38:25.854209+00
10	auth	0003_alter_user_email_max_length	2025-06-05 08:38:25.860275+00
11	auth	0004_alter_user_username_opts	2025-06-05 08:38:25.865178+00
12	auth	0005_alter_user_last_login_null	2025-06-05 08:38:25.872211+00
13	auth	0006_require_contenttypes_0002	2025-06-05 08:38:25.873924+00
14	auth	0007_alter_validators_add_error_messages	2025-06-05 08:38:25.878115+00
15	auth	0008_alter_user_username_max_length	2025-06-05 08:38:25.885883+00
16	auth	0009_alter_user_last_name_max_length	2025-06-05 08:38:25.891363+00
17	auth	0010_alter_group_name_max_length	2025-06-05 08:38:25.89702+00
18	auth	0011_update_proxy_permissions	2025-06-05 08:38:25.900752+00
19	auth	0012_alter_user_first_name_max_length	2025-06-05 08:38:25.905318+00
20	authtoken	0001_initial	2025-06-05 08:38:25.918619+00
21	authtoken	0002_auto_20160226_1747	2025-06-05 08:38:25.929271+00
22	authtoken	0003_tokenproxy	2025-06-05 08:38:25.931179+00
23	authtoken	0004_alter_tokenproxy_options	2025-06-05 08:38:25.933589+00
24	taggit	0001_initial	2025-06-05 08:38:25.961888+00
25	taggit	0002_auto_20150616_2121	2025-06-05 08:38:25.965855+00
26	taggit	0003_taggeditem_add_unique_index	2025-06-05 08:38:25.97014+00
27	taggit	0004_alter_taggeditem_content_type_alter_taggeditem_tag	2025-06-05 08:38:25.978987+00
28	taggit	0005_auto_20220424_2025	2025-06-05 08:38:25.982169+00
29	taggit	0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx	2025-06-05 08:38:25.998506+00
30	blog	0001_initial	2025-06-05 08:38:26.01496+00
31	blog	0002_alter_post_slug	2025-06-05 08:38:26.020068+00
32	blog	0003_comment	2025-06-05 08:38:26.03766+00
33	blog	0004_post_tags	2025-06-05 08:38:26.043481+00
34	sessions	0001_initial	2025-06-05 08:38:26.053673+00
35	sites	0001_initial	2025-06-05 08:38:26.057394+00
36	sites	0002_alter_domain_unique	2025-06-05 08:38:26.064108+00
37	default	0001_initial	2025-06-05 08:38:26.111175+00
38	social_auth	0001_initial	2025-06-05 08:38:26.111976+00
39	default	0002_add_related_name	2025-06-05 08:38:26.116472+00
40	social_auth	0002_add_related_name	2025-06-05 08:38:26.116995+00
41	default	0003_alter_email_max_length	2025-06-05 08:38:26.119207+00
42	social_auth	0003_alter_email_max_length	2025-06-05 08:38:26.119516+00
43	default	0004_auto_20160423_0400	2025-06-05 08:38:26.12378+00
44	social_auth	0004_auto_20160423_0400	2025-06-05 08:38:26.124541+00
45	social_auth	0005_auto_20160727_2333	2025-06-05 08:38:26.128319+00
46	social_django	0006_partial	2025-06-05 08:38:26.135798+00
47	social_django	0007_code_timestamp	2025-06-05 08:38:26.140974+00
48	social_django	0008_partial_timestamp	2025-06-05 08:38:26.145057+00
49	social_django	0009_auto_20191118_0520	2025-06-05 08:38:26.157156+00
50	social_django	0010_uid_db_index	2025-06-05 08:38:26.164114+00
51	social_django	0011_alter_id_fields	2025-06-05 08:38:26.213286+00
52	social_django	0012_usersocialauth_extra_data_new	2025-06-05 08:38:26.227258+00
53	social_django	0013_migrate_extra_data	2025-06-05 08:38:26.238168+00
54	social_django	0014_remove_usersocialauth_extra_data	2025-06-05 08:38:26.244591+00
55	social_django	0015_rename_extra_data_new_usersocialauth_extra_data	2025-06-05 08:38:26.25039+00
56	social_django	0016_alter_usersocialauth_extra_data	2025-06-05 08:38:26.254684+00
57	social_django	0001_initial	2025-06-05 08:38:26.257262+00
58	social_django	0003_alter_email_max_length	2025-06-05 08:38:26.257818+00
59	social_django	0004_auto_20160423_0400	2025-06-05 08:38:26.258185+00
60	social_django	0002_add_related_name	2025-06-05 08:38:26.258485+00
61	social_django	0005_auto_20160727_2333	2025-06-05 08:38:26.258861+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
ts20wi9aqtmsoth3bgtpofhu2hx6f6h7	.eJxVjDsOwjAQBe_iGllx_FkvJT1nsNbZDQ4gR4qTCnF3iJQC2jcz76USbWtJW5MlTazOyqjT75ZpeEjdAd-p3mY9zHVdpqx3RR-06evM8rwc7t9BoVa-tetjQADnmTjm6IztvPfsMAgxB4liEVn8CGO2YE0XQgTsASE7y2TU-wPEIjcS:1tFY5L:3RdUk2his3kx3sxbLA76yHUXlS2uCp3PhDtSy79erOw	2024-12-09 12:20:59.981+00
x0qrbn22d6fbvf84stc0mggocqn3i3s2	.eJxVjDsOwjAQBe_iGllx_FkvJT1nsNbZDQ4gR4qTCnF3iJQC2jcz76USbWtJW5MlTazOyqjT75ZpeEjdAd-p3mY9zHVdpqx3RR-06evM8rwc7t9BoVa-tetjQADnmTjm6IztvPfsMAgxB4liEVn8CGO2YE0XQgTsASE7y2TU-wPEIjcS:1tBat5:93ECE9DFLqrLa3EEWFJiqRk5aqJVI-DhSiyJ9vk6spc	2024-11-28 14:31:59.849+00
ruzb55y82jehndck2eansz85lwqd68sr	eyJ2ay1vYXV0aDJfc3RhdGUiOiJtVUE0U3lQR243NnloS0gzZkVjeGF5NjZJNElPdWRBSyJ9:1uN7qn:SV_OIM0figrXQwS3KJA_XCw5YtUbzLp-M7-niAti3N8	2025-06-05 11:29:33.758167+00
apu5m8d2do0nrzgol8r3slpmukfqcoq0	eyJnb29nbGUtb2F1dGgyX3N0YXRlIjoibTBISml3Z3U3S2kzcHIwWmNWbmZJeUpwMmxTYmZ3eUYifQ:1uNTFS:psXeY4X9f6ha-HKDuFlNYmYo8OvcfIiqV5p7ml4zuIk	2025-06-06 10:20:26.447651+00
\.


--
-- Data for Name: django_site; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.django_site (id, domain, name) FROM stdin;
1	example.com	example.com
\.


--
-- Data for Name: social_auth_association; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.social_auth_association (id, server_url, handle, secret, issued, lifetime, assoc_type) FROM stdin;
\.


--
-- Data for Name: social_auth_code; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.social_auth_code (id, email, code, verified, "timestamp") FROM stdin;
\.


--
-- Data for Name: social_auth_nonce; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.social_auth_nonce (id, server_url, "timestamp", salt) FROM stdin;
\.


--
-- Data for Name: social_auth_partial; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.social_auth_partial (id, token, next_step, backend, "timestamp", data) FROM stdin;
\.


--
-- Data for Name: social_auth_usersocialauth; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.social_auth_usersocialauth (id, provider, uid, user_id, created, modified, extra_data) FROM stdin;
1	google-oauth2	aasmolnikov@gmail.com	2	2025-06-05 10:29:27.005469+00	2025-06-05 10:29:27.009719+00	{"expires": 3599, "auth_time": 1749119367, "token_type": "Bearer", "access_token": "ya29.a0AW4XtxiX2otUy8xeGedsSz-LuIk0LBvGYL2Uy84XBNuv0OKEU-ArL2hcf9kaml2CNPtaKBKSNGTJtDSX9Pxy-4dvRTFmFpDAS4qedr2Ofq2pBEzyuDNZ_PxhRcPKFgOkFQvNoydImJv8XJy42yRRiZNxgDaynNTIWJkWp1iSaCgYKAe0SARESFQHGX2Mi4SVqPKwXoIWDBH23WSi14Q0175"}
\.


--
-- Data for Name: taggit_tag; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.taggit_tag (id, name, slug) FROM stdin;
1	menedzhment	menedzhment
2	projects	projects
3	privlechenie	privlechenie
4	markdown	markdown
\.


--
-- Data for Name: taggit_taggeditem; Type: TABLE DATA; Schema: public; Owner: blog
--

COPY public.taggit_taggeditem (id, object_id, content_type_id, tag_id) FROM stdin;
1	7	7	1
2	8	7	2
3	5	7	3
4	11	7	3
5	14	7	4
\.


--
-- Name: accounts_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.accounts_profile_id_seq', 2, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 76, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 2, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: blog_comment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.blog_comment_id_seq', 2, true);


--
-- Name: blog_post_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.blog_post_id_seq', 14, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 24, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 19, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 61, true);


--
-- Name: django_site_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.django_site_id_seq', 1, true);


--
-- Name: social_auth_association_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.social_auth_association_id_seq', 1, false);


--
-- Name: social_auth_code_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.social_auth_code_id_seq', 1, false);


--
-- Name: social_auth_nonce_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.social_auth_nonce_id_seq', 1, false);


--
-- Name: social_auth_partial_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.social_auth_partial_id_seq', 1, false);


--
-- Name: social_auth_usersocialauth_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.social_auth_usersocialauth_id_seq', 1, true);


--
-- Name: taggit_tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.taggit_tag_id_seq', 4, true);


--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog
--

SELECT pg_catalog.setval('public.taggit_taggeditem_id_seq', 5, true);


--
-- Name: accounts_profile accounts_profile_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_pkey PRIMARY KEY (id);


--
-- Name: accounts_profile accounts_profile_user_id_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_user_id_key UNIQUE (user_id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: authtoken_token authtoken_token_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_pkey PRIMARY KEY (key);


--
-- Name: authtoken_token authtoken_token_user_id_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_user_id_key UNIQUE (user_id);


--
-- Name: blog_comment blog_comment_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT blog_comment_pkey PRIMARY KEY (id);


--
-- Name: blog_post blog_post_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_pkey PRIMARY KEY (id);


--
-- Name: blog_post blog_post_slug_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_slug_key UNIQUE (slug);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: django_site django_site_domain_a2e37b91_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.django_site
    ADD CONSTRAINT django_site_domain_a2e37b91_uniq UNIQUE (domain);


--
-- Name: django_site django_site_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.django_site
    ADD CONSTRAINT django_site_pkey PRIMARY KEY (id);


--
-- Name: social_auth_association social_auth_association_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_association
    ADD CONSTRAINT social_auth_association_pkey PRIMARY KEY (id);


--
-- Name: social_auth_association social_auth_association_server_url_handle_078befa2_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_association
    ADD CONSTRAINT social_auth_association_server_url_handle_078befa2_uniq UNIQUE (server_url, handle);


--
-- Name: social_auth_code social_auth_code_email_code_801b2d02_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_code
    ADD CONSTRAINT social_auth_code_email_code_801b2d02_uniq UNIQUE (email, code);


--
-- Name: social_auth_code social_auth_code_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_code
    ADD CONSTRAINT social_auth_code_pkey PRIMARY KEY (id);


--
-- Name: social_auth_nonce social_auth_nonce_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_nonce
    ADD CONSTRAINT social_auth_nonce_pkey PRIMARY KEY (id);


--
-- Name: social_auth_nonce social_auth_nonce_server_url_timestamp_salt_f6284463_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_nonce
    ADD CONSTRAINT social_auth_nonce_server_url_timestamp_salt_f6284463_uniq UNIQUE (server_url, "timestamp", salt);


--
-- Name: social_auth_partial social_auth_partial_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_partial
    ADD CONSTRAINT social_auth_partial_pkey PRIMARY KEY (id);


--
-- Name: social_auth_usersocialauth social_auth_usersocialauth_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_usersocialauth
    ADD CONSTRAINT social_auth_usersocialauth_pkey PRIMARY KEY (id);


--
-- Name: social_auth_usersocialauth social_auth_usersocialauth_provider_uid_e6b5e668_uniq; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_usersocialauth
    ADD CONSTRAINT social_auth_usersocialauth_provider_uid_e6b5e668_uniq UNIQUE (provider, uid);


--
-- Name: taggit_tag taggit_tag_name_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_name_key UNIQUE (name);


--
-- Name: taggit_tag taggit_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_pkey PRIMARY KEY (id);


--
-- Name: taggit_tag taggit_tag_slug_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_slug_key UNIQUE (slug);


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uni; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uni UNIQUE (content_type_id, object_id, tag_id);


--
-- Name: taggit_taggeditem taggit_taggeditem_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_pkey PRIMARY KEY (id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: authtoken_token_key_10f0b77e_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX authtoken_token_key_10f0b77e_like ON public.authtoken_token USING btree (key varchar_pattern_ops);


--
-- Name: blog_commen_created_0e6ed4_idx; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX blog_commen_created_0e6ed4_idx ON public.blog_comment USING btree (created);


--
-- Name: blog_comment_post_id_580e96ef; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX blog_comment_post_id_580e96ef ON public.blog_comment USING btree (post_id);


--
-- Name: blog_post_author_id_dd7a8485; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX blog_post_author_id_dd7a8485 ON public.blog_post USING btree (author_id);


--
-- Name: blog_post_publish_bb7600_idx; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX blog_post_publish_bb7600_idx ON public.blog_post USING btree (publish DESC);


--
-- Name: blog_post_slug_b95473f2_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX blog_post_slug_b95473f2_like ON public.blog_post USING btree (slug varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: django_site_domain_a2e37b91_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX django_site_domain_a2e37b91_like ON public.django_site USING btree (domain varchar_pattern_ops);


--
-- Name: social_auth_code_code_a2393167; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX social_auth_code_code_a2393167 ON public.social_auth_code USING btree (code);


--
-- Name: social_auth_code_code_a2393167_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX social_auth_code_code_a2393167_like ON public.social_auth_code USING btree (code varchar_pattern_ops);


--
-- Name: social_auth_code_timestamp_176b341f; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX social_auth_code_timestamp_176b341f ON public.social_auth_code USING btree ("timestamp");


--
-- Name: social_auth_partial_timestamp_50f2119f; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX social_auth_partial_timestamp_50f2119f ON public.social_auth_partial USING btree ("timestamp");


--
-- Name: social_auth_partial_token_3017fea3; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX social_auth_partial_token_3017fea3 ON public.social_auth_partial USING btree (token);


--
-- Name: social_auth_partial_token_3017fea3_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX social_auth_partial_token_3017fea3_like ON public.social_auth_partial USING btree (token varchar_pattern_ops);


--
-- Name: social_auth_usersocialauth_uid_796e51dc; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX social_auth_usersocialauth_uid_796e51dc ON public.social_auth_usersocialauth USING btree (uid);


--
-- Name: social_auth_usersocialauth_uid_796e51dc_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX social_auth_usersocialauth_uid_796e51dc_like ON public.social_auth_usersocialauth USING btree (uid varchar_pattern_ops);


--
-- Name: social_auth_usersocialauth_user_id_17d28448; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX social_auth_usersocialauth_user_id_17d28448 ON public.social_auth_usersocialauth USING btree (user_id);


--
-- Name: taggit_tag_name_58eb2ed9_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX taggit_tag_name_58eb2ed9_like ON public.taggit_tag USING btree (name varchar_pattern_ops);


--
-- Name: taggit_tag_slug_6be58b2c_like; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX taggit_tag_slug_6be58b2c_like ON public.taggit_tag USING btree (slug varchar_pattern_ops);


--
-- Name: taggit_tagg_content_8fc721_idx; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX taggit_tagg_content_8fc721_idx ON public.taggit_taggeditem USING btree (content_type_id, object_id);


--
-- Name: taggit_taggeditem_content_type_id_9957a03c; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX taggit_taggeditem_content_type_id_9957a03c ON public.taggit_taggeditem USING btree (content_type_id);


--
-- Name: taggit_taggeditem_object_id_e2d7d1df; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX taggit_taggeditem_object_id_e2d7d1df ON public.taggit_taggeditem USING btree (object_id);


--
-- Name: taggit_taggeditem_tag_id_f4f5b767; Type: INDEX; Schema: public; Owner: blog
--

CREATE INDEX taggit_taggeditem_tag_id_f4f5b767 ON public.taggit_taggeditem USING btree (tag_id);


--
-- Name: accounts_profile accounts_profile_user_id_49a85d32_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_user_id_49a85d32_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: authtoken_token authtoken_token_user_id_35299eff_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_user_id_35299eff_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_comment blog_comment_post_id_580e96ef_fk_blog_post_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT blog_comment_post_id_580e96ef_fk_blog_post_id FOREIGN KEY (post_id) REFERENCES public.blog_post(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_post blog_post_author_id_dd7a8485_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_author_id_dd7a8485_fk_auth_user_id FOREIGN KEY (author_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: social_auth_usersocialauth social_auth_usersocialauth_user_id_17d28448_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.social_auth_usersocialauth
    ADD CONSTRAINT social_auth_usersocialauth_user_id_17d28448_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_9957a03c_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_9957a03c_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id FOREIGN KEY (tag_id) REFERENCES public.taggit_tag(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: blog
--

REVOKE USAGE ON SCHEMA public FROM PUBLIC;


--
-- PostgreSQL database dump complete
--

